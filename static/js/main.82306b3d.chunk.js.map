{"version":3,"sources":["app/hooks.ts","components/employeeBirthday/employeeBithday.slice.tsx","components/employee/Employee.tsx","data.js","sortEmployees.ts","components/employeeBirthday/EmployeeBirthday.tsx","components/loading/Loading.jsx","pages/Employees/Employees.tsx","App.tsx","app/store.ts","index.tsx"],"names":["useAppSelector","useSelector","employeeBirthdaySlice","createSlice","name","initialState","localStorage","birthdayList","JSON","parse","reducers","addEmployeeBirthday","state","action","push","payload","removeEmployeeBirthday","forEach","id","index","splice","actions","Employee","props","useState","option","setOption","employeeBirthday","dispatch","useDispatch","handleOption","event","optionValue","currentTarget","value","employee","useEffect","length","setItem","stringify","className","firstName","lastName","type","checked","onChange","months","alphabet","sortEmployees","a","b","x","toLowerCase","y","EmployeeBirthday","currentMonth","Date","getMonth","map","month","employees","filter","some","dob","sort","getDate","getFullYear","Loading","Employees","setEmployee","fetch","then","response","json","data","catch","err","console","log","letter","App","path","element","replace","to","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.82306b3d.chunk.js","sourcesContent":["import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\r\nimport type { RootState, AppDispatch } from './store';\r\n\r\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n\r\nexport const employeeBirthdaySlice = createSlice({\r\n  name: 'employeeBirthdays',\r\n  initialState: localStorage.birthdayList ? (JSON.parse(localStorage.birthdayList) as string[]) : ([] as string[]),\r\n  reducers: {\r\n    addEmployeeBirthday: (state, action: PayloadAction<string>) => {\r\n      state.push(action.payload);\r\n    },\r\n    removeEmployeeBirthday: (state, action: PayloadAction<string>) => {\r\n      state.forEach((id, index) => action.payload === id && state.splice(index, 1));\r\n    },\r\n  },\r\n});\r\nexport const { addEmployeeBirthday, removeEmployeeBirthday } = employeeBirthdaySlice.actions;\r\nexport default employeeBirthdaySlice.reducer;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\r\nimport { IEmployee } from '../../interfaces';\r\nimport { addEmployeeBirthday, removeEmployeeBirthday } from '../employeeBirthday/employeeBithday.slice';\r\nimport './Employee.css';\r\n\r\nfunction Employee(props: { employee: IEmployee }) {\r\n  const [option, setOption] = useState('false');\r\n  const birthdayList = useAppSelector((state) => state.employeeBirthday);\r\n  const dispatch = useAppDispatch();\r\n\r\n  useEffect(() => {\r\n    if (birthdayList.length) {\r\n      birthdayList.forEach((id: string) => {\r\n        if (id === props.employee.id) {\r\n          setOption('true');\r\n        }\r\n      });\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('birthdayList', JSON.stringify(birthdayList));\r\n  }, [birthdayList]);\r\n\r\n  function handleOption(event: React.FormEvent<HTMLInputElement>) {\r\n    let optionValue = event.currentTarget.value;\r\n    setOption(optionValue);\r\n    if (optionValue === 'true') {\r\n      dispatch(addEmployeeBirthday(props.employee.id));\r\n    } else {\r\n      dispatch(removeEmployeeBirthday(props.employee.id));\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"employee\">\r\n      <h4 className={option === 'true' ? 'employee__name employee__name_active' : 'employee__name'}>\r\n        {props.employee.firstName} {props.employee.lastName}\r\n      </h4>\r\n      <div className=\"employee__options\">\r\n        <label className=\"employee__options-label\">\r\n          <input\r\n            className=\"employee__options-input\"\r\n            type=\"radio\"\r\n            value=\"false\"\r\n            checked={option === 'false'}\r\n            onChange={handleOption}\r\n          />\r\n          <span className=\"checkmark\"></span>\r\n          not active\r\n        </label>\r\n        <label className=\"employee__options-label\">\r\n          <input\r\n            className=\"employee__options-input\"\r\n            type=\"radio\"\r\n            value=\"true\"\r\n            checked={option === 'true'}\r\n            onChange={handleOption}\r\n          />\r\n          <span className=\"checkmark\"></span>\r\n          active\r\n        </label>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Employee;\r\n","export const months = [\r\n  'January',\r\n  'February',\r\n  'March',\r\n  'April',\r\n  'May',\r\n  'June',\r\n  'July',\r\n  'August',\r\n  'September',\r\n  'October',\r\n  'November',\r\n  'December',\r\n];\r\n\r\nexport const alphabet = [\r\n  'A',\r\n  'B',\r\n  'C',\r\n  'D',\r\n  'E',\r\n  'F',\r\n  'G',\r\n  'H',\r\n  'I',\r\n  'J',\r\n  'K',\r\n  'L',\r\n  'M',\r\n  'N',\r\n  'O',\r\n  'P',\r\n  'Q',\r\n  'R',\r\n  'S',\r\n  'T',\r\n  'U',\r\n  'V',\r\n  'W',\r\n  'X',\r\n  'Y',\r\n  'Z',\r\n];\r\n","import { IEmployee } from './interfaces';\r\nexport function sortEmployees(a: IEmployee, b: IEmployee) {\r\n  let x = a.firstName.toLowerCase();\r\n  let y = b.firstName.toLowerCase();\r\n  if (x < y) {\r\n    return -1;\r\n  }\r\n  if (x > y) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n","import React from 'react';\r\nimport { IEmployee } from '../../interfaces';\r\nimport { months } from '../../data.js';\r\nimport { useAppSelector } from '../../app/hooks';\r\nimport { sortEmployees } from '../../sortEmployees';\r\nimport './EmployeeBirthday.css';\r\n\r\nfunction EmployeeBirthday(props: { employees: IEmployee[] }) {\r\n  const birthdayList = useAppSelector((state) => state.employeeBirthday);\r\n  const currentMonth = new Date().getMonth();\r\n\r\n  return (\r\n    <div className=\"employees__birthday\">\r\n      <h2 className=\"employees__title\">Employees birthday</h2>\r\n      <ul className=\"employees__month-list\">\r\n        {birthdayList.length ? (\r\n          months.map((month, index) => (\r\n            <li className=\"employees__month-item\" key={index}>\r\n              <h3 className=\"employees__month\">{months[(index + currentMonth) % months.length]}</h3>\r\n              <ul>\r\n                {props.employees\r\n                  ?.filter((employee) => birthdayList.some((id) => id === employee.id))\r\n                  .filter((employee) => new Date(employee.dob).getMonth() === (index + currentMonth) % months.length)\r\n                  .length ? (\r\n                  props.employees\r\n                    ?.filter((employee) => birthdayList.some((id) => id === employee.id))\r\n                    .filter((employee) => new Date(employee.dob).getMonth() === (index + currentMonth) % months.length)\r\n                    .sort((a, b) => sortEmployees(a, b))\r\n                    .map((employee) => (\r\n                      <li className=\"employees__date\" key={employee.id}>\r\n                        {`${employee.lastName} ${employee.firstName} - ${new Date(employee.dob).getDate()} `}\r\n                        {months[new Date(employee.dob).getMonth()]}, {new Date(employee.dob).getFullYear()} year\r\n                      </li>\r\n                    ))\r\n                ) : (\r\n                  <li className=\"employees__empty\">\"No Employees\"</li>\r\n                )}\r\n              </ul>\r\n            </li>\r\n          ))\r\n        ) : (\r\n          <p className=\"employees__empty\">Employees List is empty</p>\r\n        )}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\nexport default EmployeeBirthday;\r\n","import React from 'react';\r\nimport './Loading.css';\r\n\r\nexport default function Loading() {\r\n  return (\r\n    <div className=\"loading-wrap\">\r\n      <p className=\"loading\">Loading...</p>\r\n      <div className=\"loader\" />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport Employee from '../../components/employee/Employee';\r\nimport EmployeeBirthday from '../../components/employeeBirthday/EmployeeBirthday';\r\nimport { sortEmployees } from '../../sortEmployees';\r\nimport { alphabet } from '../../data';\r\nimport { IEmployee } from '../../interfaces';\r\nimport Loading from '../../components/loading/Loading';\r\nimport './Employees.css';\r\n\r\nfunction Employees() {\r\n  const [employees, setEmployee] = useState<IEmployee[]>();\r\n\r\n  useEffect(() => {\r\n    fetch(`https://yalantis-react-school-api.yalantis.com/api/task0/users`)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setEmployee(data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {employees ? (\r\n        <div className=\"employees\">\r\n          <div className=\"employees__all\">\r\n            <h2 className=\"employees__title\">Employees</h2>\r\n            <ul className=\"employees__list\">\r\n              {employees &&\r\n                alphabet.map((letter, index) => (\r\n                  <li className=\"employees__item\" key={index}>\r\n                    <div>\r\n                      <h3 className=\"employees__letter\">{letter}</h3>\r\n                      {employees.filter((employee) => employee.firstName[0] === letter).length ? (\r\n                        employees\r\n                          .filter((employee) => employee.firstName[0] === letter)\r\n                          .sort((a, b) => sortEmployees(a, b))\r\n                          .map((employee) => <Employee key={employee.id} employee={employee} />)\r\n                      ) : (\r\n                        <p className=\"employees__empty employees__empty_all\">\"No Employees\"</p>\r\n                      )}\r\n                    </div>\r\n                  </li>\r\n                ))}\r\n            </ul>\r\n          </div>\r\n          <EmployeeBirthday employees={employees} />\r\n        </div>\r\n      ) : (\r\n        <Loading />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Employees;\r\n","import React from 'react';\r\nimport { HashRouter, Route, Routes, Navigate } from 'react-router-dom';\r\nimport Employees from './pages/Employees/Employees';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <HashRouter>\r\n      <Routes>\r\n        <Route path=\"/\" element={<Navigate replace to=\"/employees\" />} />\r\n        <Route path=\"employees\" element={<Employees />} />\r\n      </Routes>\r\n    </HashRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\r\nimport employeeBirthdaySlice from '../components/employeeBirthday/employeeBithday.slice';\r\n\r\nexport const store = configureStore({\r\n  reducer: { employeeBirthday: employeeBirthdaySlice },\r\n});\r\n\r\nexport type AppDispatch = typeof store.dispatch;\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, RootState, unknown, Action<string>>;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { store } from './app/store';\r\nimport { Provider } from 'react-redux';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}